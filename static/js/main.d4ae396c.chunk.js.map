{"version":3,"sources":["Todo/Card.module.scss","SideBar/SideBar.module.scss","Todo/ListCards.module.scss","App.module.scss","Extra/Header.module.css","Extra/ShowSideButton.module.scss","logo.svg","Extra/Header.js","Todo/Card.js","Todo/ListCards.js","Extra/ShowSideButton.js","SideBar/SideBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","className","styles","header","Card","saveChangesToStorage","setState","state","newCardData","title","subtasks","localStorage","setItem","cardId","JSON","stringify","addSubtask","concat","text","completed","expanded","deleteSubtask","i","filter","task","index","handleClick","e","console","log","target","classList","addButton","current","editButton","renaming","deleteButton","deleteCard","doneButton","finishCardRenaming","handleDoubleClick","handleChangeTitle","event","value","handleCompleted","newStatus","editSubtask","editingSub","renameSubtask","newName","finishEditSubtask","React","createRef","cardData","getItem","this","parse","map","headerContents","type","card__header__changeName","onChange","ref","icon","style","fontSize","subcards","key","card__body__subtask","checked","subTask","littleIcon","onClick","length","card__body__notask","card","card__header","onDoubleClick","card__body","card__shadow","Component","ListCards","addCard","nextId","parseInt","newCards","cards","selected","id","removeItem","selectedCache","expandedCard","todoList","expandCard","changeTitle","onComplete","ShowSideButton","showButton","SideBar","newCategory","categories","name","newCatId","startRename","saveChanges","handleChangeName","endRename","deleteCategory","cat","onSelected","category","objType","toggleSideBar","open","reduce","a","b","Math","max","iddd","sideBar","yellowBall","sideBar__item","changeName","App","changeCategory","selectedName","app","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d4ae396c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3ZvbY\",\"card__header\":\"Card_card__header__1m14n\",\"card__header__changeName\":\"Card_card__header__changeName__2Wm70\",\"card__body\":\"Card_card__body__KjpXB\",\"card__body--hidden\":\"Card_card__body--hidden__fN6c9\",\"card__body__subtask\":\"Card_card__body__subtask__31-xF\",\"card__body__notask\":\"Card_card__body__notask__1lrOV\",\"card__shadow\":\"Card_card__shadow__1aQ-G\",\"subTask\":\"Card_subTask__2mHCt\",\"subTask--complete\":\"Card_subTask--complete__CxKVG\",\"subTask--incomplete\":\"Card_subTask--incomplete__1eque\",\"icon\":\"Card_icon__1bJlV\",\"littleIcon\":\"Card_littleIcon__2JYq8\",\"opening\":\"Card_opening__2Szc5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideBar\":\"SideBar_sideBar__3nLg6\",\"sideBar__item\":\"SideBar_sideBar__item__2Mjrc\",\"sideBar__item--selected\":\"SideBar_sideBar__item--selected__pdb45\",\"sideBar__add\":\"SideBar_sideBar__add__160PY\",\"sideBar--close\":\"SideBar_sideBar--close__muhP8\",\"sideBar--open\":\"SideBar_sideBar--open__2naUD\",\"icon\":\"SideBar_icon__2cFoE\",\"littleIcon\":\"SideBar_littleIcon__3g8dD\",\"yellowBall\":\"SideBar_yellowBall__yy7iP\",\"changeName\":\"SideBar_changeName__1h0VJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoList\":\"ListCards_todoList__2aQIG\",\"addButton\":\"ListCards_addButton__3Hb7M\",\"categoryTitle\":\"ListCards_categoryTitle__3RfAh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__276EL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__QN0__\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showButton\":\"ShowSideButton_showButton__2Iz6H\"};","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React, {Component} from 'react'\r\nimport styles from './Header.module.css'\r\n\r\nexport default function Header(props){\r\n  \r\n\r\n\r\n  return(\r\n    <div className={styles.header}>\r\n      To-Do list app por Federico Reina\r\n    </div>\r\n  )\r\n\r\n}","import React, {Component} from 'react'\r\nimport styles from './Card.module.scss'\r\n\r\nexport default class Card extends Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      expanded: false,\r\n      \r\n      renaming: false,\r\n\r\n      title: '',\r\n      subtasks: [],\r\n\r\n      addButton: React.createRef(),\r\n      editButton: React.createRef(),\r\n      deleteButton: React.createRef(),\r\n      doneButton: React.createRef(),\r\n      editingSub: -1,\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    \r\n    let cardData = localStorage.getItem(`Card${this.props.cardId}`,) || JSON.stringify({title: 'new Card', subtasks:[\r\n      {text:'Hacer el diseño UI', completed: false},\r\n      {text:'Hacer el diseño UI', completed: false}, \r\n      {text:'Hacer el diseño UI', completed: false},\r\n    ]})\r\n    cardData = JSON.parse(cardData);\r\n    console.log(cardData)\r\n    this.setState({title: cardData.title, subtasks:cardData.subtasks});\r\n  }\r\n\r\n  saveChangesToStorage = ()=>{\r\n    this.setState((state,props)=>{\r\n      let newCardData = {title:state.title, subtasks:state.subtasks};\r\n      localStorage.setItem(`Card${this.props.cardId}`,JSON.stringify(newCardData));\r\n      return {};\r\n    })\r\n    \r\n  }\r\n\r\n  addSubtask = ()=>{\r\n    this.setState((state,props)=>{\r\n      let subtasks = state.subtasks.concat({text:'Nueva subtarea',completed:false});\r\n      return {subtasks,expanded:true};\r\n    })\r\n    this.saveChangesToStorage();\r\n  }\r\n\r\n  deleteSubtask = (i)=>{\r\n    this.setState((state,props)=>{\r\n      let subtasks = state.subtasks.filter((task,index)=>index!==i)\r\n      return {subtasks};\r\n    })\r\n    this.saveChangesToStorage();\r\n  }\r\n\r\n  handleClick = (e)=>{\r\n      console.log({e:e.target.classList})\r\n      let classList = e.target.classList;\r\n\r\n      switch(e.target){\r\n        case this.state.addButton.current:\r\n          this.addSubtask();\r\n          break;\r\n        case this.state.editButton.current:\r\n          console.log('aca')\r\n          this.setState({renaming:true});\r\n          break;\r\n        case this.state.deleteButton.current:\r\n          this.props.deleteCard(this.props.cardId);\r\n          break;\r\n        case this.state.doneButton.current:\r\n          this.finishCardRenaming(this.props.cardId);\r\n          break;\r\n        default:\r\n          \r\n          // this.props.expandCard(this.props.cardId);\r\n          break;\r\n          // this.setState((state,props)=>{\r\n          //   return {expanded: state.renaming? true: !state.expanded}\r\n          // })\r\n      }\r\n      /*if (classList.includes(styles['icon--add'])){\r\n        console.log('adding')\r\n      }*/\r\n      \r\n    \r\n  }\r\n\r\n  handleDoubleClick = ()=>{\r\n    console.log('double')\r\n    //this.setState({renaming:true})\r\n  }\r\n\r\n  finishCardRenaming = ()=>{\r\n    \r\n    this.setState({renaming:false,expanded:true})\r\n    this.saveChangesToStorage();\r\n    \r\n  }\r\n\r\n  handleChangeTitle = (event)=>{\r\n    this.setState({title:event.target.value})\r\n  }\r\n\r\n  handleCompleted = (i,newStatus)=>{\r\n    this.setState((state,props)=>{\r\n      let subtasks = [...state.subtasks]\r\n      subtasks[i] = {...subtasks[i], completed:newStatus};\r\n      //console.log({jjjjjj:subtasks})\r\n      return {subtasks}\r\n    })\r\n    this.saveChangesToStorage();\r\n  }\r\n\r\n  editSubtask = (i)=>{\r\n    this.setState({editingSub:i});\r\n    this.saveChangesToStorage();\r\n  }\r\n\r\n  renameSubtask = (i,newName)=>{\r\n    this.setState((state,props)=>{\r\n      let subtasks = [...state.subtasks ]\r\n      subtasks[i] = {...subtasks[i], text:newName};\r\n      return {subtasks};\r\n    })\r\n  }\r\n\r\n  finishEditSubtask = ()=>{\r\n    this.setState({editingSub:-1})\r\n    this.saveChangesToStorage();\r\n  }\r\n\r\n  render(){\r\n\r\n    console.log(this.state.subtasks.map(task=>task.completed))\r\n\r\n    let headerContents = this.state.renaming\r\n        ? (<>\r\n            <input type='text' value={this.state.title} className={styles.card__header__changeName} \r\n                            onChange={this.handleChangeTitle}/>\r\n            <i ref={this.state.doneButton} className={`material-icons ${styles.icon}`}>done</i>\r\n          </>)\r\n        : (<>\r\n            <span style={{fontSize:24}}>{this.state.title} \r\n              <i ref={this.state.addButton} className={`material-icons ${styles.icon}`}>add</i>\r\n              <i ref={this.state.editButton} className={`material-icons ${styles.icon}`}>edit</i>\r\n              <i ref={this.state.deleteButton} className={`material-icons ${styles.icon}`}>delete</i>\r\n            </span>\r\n          </>)\r\n    \r\n    //console.log({tt:this.state.subtasks})\r\n    let subcards = this.state.subtasks.map((task,i)=>(\r\n      <div key={i} className={styles.card__body__subtask}>\r\n        {i !== this.state.editingSub\r\n            ?<>\r\n              <input type=\"checkbox\"  checked={task.completed} onChange={(event)=>this.handleCompleted(i,event.target.checked)} className={`${styles.subTask} ${task.completed?styles['subTask--complete']:styles['subTask--incomplete']}`}/>\r\n              <span>\r\n                {task.text}\r\n                <i className={`material-icons ${styles.icon} ${styles.littleIcon}`} onClick={()=>this.editSubtask(i)}>edit</i>\r\n                <i className={`material-icons ${styles.icon} ${styles.littleIcon}`} onClick={()=>this.deleteSubtask(i)}>delete</i>\r\n              </span>\r\n            </>\r\n            :<>\r\n              <input type='text' value={task.text} onChange={(event)=>this.renameSubtask(i,event.target.value)}></input>\r\n              <i className={`material-icons ${styles.icon} ${styles.littleIcon}`} onClick={()=>this.finishEditSubtask()}>done</i>\r\n            </>}\r\n      </div>))\r\n\r\n    if (this.state.subtasks.length === 0){\r\n      subcards = (\r\n        <div key={-1} className={`${styles.card__body__notask}`} onClick={this.addSubtask}>\r\n          Ninguna subtarea ha sido añadida. Haga click aquí o en el botón <i className={`material-icons ${styles.littleIcon}`}>add</i> de arriba para añadir una subtarea a esta tarea.\r\n        </div>\r\n      )\r\n    }\r\n        \r\n\r\n    return (\r\n      \r\n        <div className={`${styles.card}`} >\r\n          {/* <span>{this.props.cardId}</span> */}\r\n          <div className={styles.card__header} onClick={this.handleClick} onDoubleClick={this.handleDoubleClick}>\r\n            {headerContents}\r\n            \r\n          </div>\r\n          {/* <div className={`${styles['collapsible-wrapper']} ${this.props.expanded?'':styles['collapsed']}`}> */}\r\n            <div className={`${styles.card__body }`}>\r\n              \r\n              {subcards}\r\n              \r\n              <div className={styles.card__shadow}></div>\r\n            </div>\r\n          \r\n          {/* </div> */}\r\n        </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport Card from './Card'\r\nimport styles from './ListCards.module.scss'\r\n\r\n\r\nexport default class ListCards extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={cards:[],selectedCache:props.selected,expandedCard:-1}\r\n    \r\n  }\r\n\r\n  componentDidMount(){\r\n    let cards = localStorage.getItem(`Category${this.props.selected}`) || \"[]\"\r\n    this.setState({cards:JSON.parse(cards)})\r\n  }\r\n\r\n  static getDerivedStateFromProps(props,state){\r\n    if(props.selected !== state.selectedCache){\r\n      let cards = localStorage.getItem(`Category${props.selected}`) || \"[]\"\r\n      return {selectedCache: props.selected, cards:JSON.parse(cards)}\r\n    }\r\n    return {}\r\n  }\r\n\r\n  addCard = ()=>{\r\n    \r\n    console.log('clicked')\r\n\r\n    let nextId = localStorage.getItem('nextId') || \"1\";\r\n    nextId = parseInt(nextId);\r\n    localStorage.setItem('nextId',nextId+1);\r\n    this.setState((state,props)=>{\r\n      \r\n      let newCards = state.cards.concat([nextId]);\r\n      localStorage.setItem(`Card${nextId}`,JSON.stringify({title:'Nueva tarjeta', subtasks:[]}));\r\n      \r\n      localStorage.setItem(`Category${this.props.selected}`,JSON.stringify(newCards));\r\n      \r\n      return {cards:newCards};\r\n    })\r\n  }\r\n\r\n  deleteCard = (id)=>{\r\n    this.setState((state,props)=>{\r\n      let cards = state.cards.filter(cardId=>cardId !== id);\r\n      localStorage.removeItem(`Card${id}`)\r\n      localStorage.setItem(`Category${state.selectedCache}`,JSON.stringify(cards))\r\n      return {cards}\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <>\r\n        {/* <ShowSideButton/> */}\r\n        {/* <div></div> */}\r\n        <div className={styles.todoList}>\r\n          {/* <h3 className={styles.categoryTitle}>{this.props.selectedName}</h3> */}\r\n          {this.state.cards.map((id,i)=>(<Card cardId={id} key={id} expanded={id===this.state.expandedCard} expandCard={(id)=>this.setState({expandedCard:id})} changeTitle={this.props.changeTitle} onComplete={this.props.onComplete} deleteCard={this.deleteCard}/>)) }\r\n          {this.props.selected === -1?'':<button className={styles.addButton} onClick={this.addCard}><i className={`material-icons`}>add</i></button>}\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React, {Component} from 'react'\r\nimport styles from './ShowSideButton.module.scss'\r\n\r\nexport default class ShowSideButton extends Component{\r\n  render(){\r\n    return (\r\n      <button className={styles.showButton} onClick={this.props.onClick}>\r\n        <i className={`material-icons`}>menu</i>\r\n      </button>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport styles from './SideBar.module.scss'\r\nimport ShowSideButton from '../Extra/ShowSideButton'\r\n\r\nexport default class SideBar extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      categories:[],\r\n      newCatId:1,\r\n      renaming:-1,\r\n      open: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    let categories = localStorage.getItem('categories') || JSON.stringify([\r\n      {name:'Work',     id:1},\r\n      {name:'Study',    id:2},\r\n    ]);\r\n    categories = JSON.parse(categories)\r\n    let newCatId = categories.reduce((a,b)=>Math.max(a,b.id),0) + 1;\r\n    localStorage.setItem('newCatId',newCatId);\r\n    this.setState({categories,newCatId});\r\n    console.log({iddd:categories[0].id})\r\n    this.props.onSelected(categories[0].id,categories[0].name);\r\n  }\r\n\r\n  newCategory = ()=>{\r\n    this.setState((state,props)=>{\r\n      let categories = state.categories.concat({name:'Categoría nueva', id:state.newCatId});\r\n      localStorage.setItem(`Category${state.newCatId}`,'[]');\r\n      return {categories,newCatId: state.newCatId+1}\r\n    })\r\n  }\r\n\r\n  \r\n  startRename = (i)=>{\r\n    this.setState({renaming:i});\r\n    this.saveChanges();\r\n  }\r\n\r\n  handleChangeName = (i,name)=>{\r\n    this.setState((state,props)=>{\r\n      let categories = [...state.categories];\r\n      categories[i] = {...categories[i], name};\r\n      return {categories}\r\n    })\r\n  }\r\n\r\n  endRename = ()=>{\r\n    this.setState({renaming:-1})\r\n    this.saveChanges();\r\n  }\r\n\r\n\r\n  saveChanges = ()=>{\r\n    this.setState((state,props)=>{\r\n      localStorage.setItem('categories', JSON.stringify(state.categories));\r\n    })\r\n  }\r\n\r\n  deleteCategory = (id)=>{\r\n    this.setState((state,props)=>{\r\n      let categories = state.categories.filter(cat=>cat.id !== id)\r\n      return {categories}\r\n    })\r\n    this.props.onSelected(-1,'')\r\n    this.saveChanges();\r\n  }\r\n\r\n  handleClick = (event, category)=>{\r\n    // ! si algun boton es oprimido\r\n    let objType = 'parent'\r\n    for(let cl of event.target.classList){\r\n      if (cl === 'material-icons') objType = 'icon'\r\n    }\r\n    if (objType === 'parent') {\r\n      this.props.onSelected(category.id,category.name)\r\n    }\r\n    //if (event.target.onClick !== this.handleClick)\r\n  }\r\n\r\n  toggleSideBar = ()=>{\r\n    // alert('jajajajaj')\r\n    this.setState((state,props)=>{\r\n      return {open: !state.open};\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className={`${styles.sideBar} ${styles[this.state.open? 'sideBar--open':'sideBar--close']}`}>\r\n        <ShowSideButton onClick = {this.toggleSideBar}/>\r\n        <span>Categories</span>\r\n        <i className={`material-icons ${styles.icon} ${styles.yellowBall}`} onClick={this.newCategory}>add</i>\r\n        {/* <div className={styles.sideBar__add}>+</div> */}\r\n        {/* <ul> */}\r\n          {this.state.categories.map((category,i)=>\r\n            category.id === this.state.renaming?(\r\n              <div className={`${styles.sideBar__item} ${this.props.selected === category.id? styles['sideBar__item--selected']: ''}`}>\r\n              <input type='text' value={category.name} className={styles.changeName} \r\n                            onChange={(event)=>this.handleChangeName(i,event.target.value)}/>\r\n                <i className={`material-icons ${styles.icon }`} onClick={()=>this.endRename()}>done</i>\r\n                \r\n                \r\n              </div>\r\n            ):(\r\n\r\n              <div className={`${styles.sideBar__item} ${this.props.selected === category.id? styles['sideBar__item--selected']: ''}`} onClick={(event)=>{this.handleClick(event,category)}} >\r\n                \r\n                  {category.name}\r\n                  <i className={`material-icons ${styles.icon }`} onClick={()=>this.startRename(category.id)}>edit</i>\r\n                  <i className={`material-icons ${styles.icon }`} onClick={()=>this.deleteCategory(category.id)}>delete</i>\r\n              </div>\r\n            ))}\r\n        {/* </ul> */}\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport logo from './logo.svg';\r\nimport styles from './App.module.scss';\r\n\r\nimport Header from './Extra/Header'\r\nimport ListCards from './Todo/ListCards'\r\nimport SideBar from './SideBar/SideBar';\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      selected: 1,\r\n      selectedName:'',\r\n      /*categories:[\r\n        {name:'Work',     id:1},\r\n        {name:'Study',    id:2},\r\n        {name:'Home',     id:3},\r\n        {name:'Hobbies',  id:4},\r\n        /*{name:'Work', id:1, tasks:[\r\n          {name:'Crear página web', subtasks:[\r\n            'Hacer el diseño UI', 'Comprar el hosting', 'Desarrollar el backend'\r\n          ]},\r\n          {name:'Comprar', subtasks:[\r\n            'Hacer el diseño UI', 'Comprar el hosting', 'Desarrollar el backend'\r\n          ]},\r\n          {name:'Crear página web', subtasks:[\r\n            'Hacer el diseño UI', 'Comprar el hosting', 'Desarrollar el backend'\r\n          ]},\r\n          {name:'Crear página web', subtasks:[\r\n            'Hacer el diseño UI', 'Comprar el hosting', 'Desarrollar el backend'\r\n          ]},\r\n        ]},\r\n        {name:'Study', tasks:[\r\n          {name:'Crear página web', subtasks:[\r\n            'Hacer el diseño UI', 'Comprar el hosting', 'Desarrollar el backend'\r\n          ]}\r\n        ]},\r\n        {name:'Home', tasks:[\r\n          {name:'Crear página web', subtasks:[\r\n            'Hacer el diseño UI', 'Comprar el hosting', 'Desarrollar el backend'\r\n          ]}\r\n        ]},\r\n        {name:'Hobbies', tasks:[\r\n          {name:'Crear página web', subtasks:[\r\n            'Hacer el diseño UI', 'Comprar el hosting', 'Desarrollar el backend'\r\n          ]}\r\n        ]},*/\r\n      /*],\r\n      cards:[\r\n        \r\n        {name: 'Crear página web', categoryId:1, id:2, subtasks:[\r\n          {text:'Hacer el diseño UI', completed: false},\r\n          {text:'Hacer el diseño UI', completed: false}, \r\n          {text:'Hacer el diseño UI', completed: false},\r\n        ]},\r\n        {name: 'Crear página web', categoryId:2, id:3, subtasks:[\r\n          {text:'Hacer el diseño UI', completed: false},\r\n          {text:'Hacer el diseño UI', completed: false}, \r\n          {text:'Hacer el diseño UI', completed: false},\r\n        ]},\r\n        {name: 'Crear página web', categoryId:3, id:4, subtasks:[\r\n          {text:'Hacer el diseño UI', completed: false},\r\n          {text:'Hacer el diseño UI', completed: false}, \r\n          {text:'Hacer el diseño UI', completed: false},\r\n        ]},\r\n        {name: 'Crear página web', categoryId:4, id:5, subtasks:[\r\n          {text:'Hacer el diseño UI', completed: false},\r\n          {text:'Hacer el diseño UI', completed: false}, \r\n          {text:'Hacer el diseño UI', completed: false},\r\n        ]},\r\n        {name: 'Crear página web', categoryId:4, id:6, subtasks:[\r\n          {text:'Hacer el diseño UI', completed: false},\r\n          {text:'Hacer el diseño UI', completed: false}, \r\n          {text:'Hacer el diseño UI', completed: false},\r\n        ]},\r\n      ],*/\r\n      //categoryNewId: 5,\r\n      //cardNewId: 7,\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    let nextId = localStorage.getItem('nextId') || 1\r\n    if (nextId == 1)localStorage.setItem('nextId',nextId)\r\n  }\r\n\r\n  changeCategory = (id,name)=>{\r\n    this.setState({selected: id, selectedName: name});\r\n    // console.log({id})\r\n  }\r\n\r\n  /*addCard = ()=>{\r\n    this.setState((state,props)=>{\r\n      let newCard = {name:'New Card', categoryId:this.state.selected,id:this.state.cardNewId,subtasks:[]};\r\n      return {\r\n        cards: this.state.cards.concat(newCard),\r\n        cardNewId: this.state.cardNewId + 1,\r\n      }\r\n    })\r\n  }*/\r\n\r\n  /*findCardById = (cards, id)=>{\r\n    let cardChangedIndex = -1;\r\n    cards.forEach((card,i)=>{\r\n      if (card.id === id) cardChangedIndex = i;\r\n    })\r\n    return cardChangedIndex;\r\n  }\r\n\r\n  changeTitle = (title, id)=>{\r\n    this.setState((state,props)=>{\r\n      let cards = [...state.cards];\r\n      let cardChangedIndex = this.findCardById(cards, id);\r\n      cards[cardChangedIndex] = {...cards[cardChangedIndex], name:title};\r\n      return {cards};\r\n    })\r\n  }\r\n\r\n  onComplete = (cardId, subtaskIndex)=>{\r\n    \r\n    this.setState((state,props)=>{\r\n      let cards = [...state.cards];\r\n      let cardChangedIndex = this.findCardById(cards, cardId);\r\n      console.log({cardChangedIndex,subtaskIndex})\r\n      let c = cards[cardChangedIndex]\r\n      let subtasks = [...c.subtasks];\r\n      let sub = subtasks[subtaskIndex]\r\n      subtasks[subtaskIndex] = {...subtasks[subtaskIndex], completed:!sub.completed}\r\n      //subtasks[subtaskIndex].completed = !(subtasks[subtaskIndex].completed)\r\n      console.log({subtasks})\r\n      cards[cardChangedIndex] = {...c, subtasks}\r\n      console.log({cards})\r\n      return {cards}\r\n    })\r\n  }*/\r\n\r\n  render(){\r\n    \r\n    return (\r\n      <div className={styles.app}>\r\n        {/* <ShowSideButton/> */}\r\n\r\n        <Header/>\r\n        <SideBar onSelected={this.changeCategory} selected={this.state.selected}/>\r\n        <ListCards selected = {this.state.selected} selectedName={this.state.selectedName}/>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}